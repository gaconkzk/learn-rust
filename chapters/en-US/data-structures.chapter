# Data Structures

---

## Structs

---

## Definition

```rust
struct Point {
    x: i32,
    y: i32,
}
```

---

## Allocation

```rust
struct Point {
    x: i32,
    y: i32,
}

fn main() {
    let p = Point { x: 1, y: 1 };
}
```

---

## Field Access

```rust
struct Point {
    x: i32,
    y: i32,
}

fn main() {
    let p = Point { x: 1, y: 2 };
    println!("{}", p.x);
    println!("{}", p.y);
}
```

---

## Tuples

```rust
fn main() {
    let p = (1, 2);
    println!("{}", p.0);
    println!("{}", p.1);
}
```

---

## Tuple Structs

```rust
struct Point(i32,i32);

fn main() {
    let p = Point(1, 2);
    println!("{}", p.0);
    println!("{}", p.1);
}
```

---

## Enums

```rust
enum Direction {
    Right,
    Left,
    Up,
    Down,
}

fn main() {
    let direction = Direction::Left;
}
```

The different choices of Enums are called "variants."

---

## Enums with Values

```rust
enum Movement {
    Right(i32),
    Left(i32),
    Up(i32),
    Down(i32),
}

fn main() {
    let movement = Movement::Left(12);
}
```

---

## Enums with Structured Variants

```rust
enum Actions {
    StickAround,
    MoveTo { x: i32, y: 32},
}

fn main() {
    let action = Actions::MoveTo { x: 0, y: 0 };
}
```

---

## `null`

Does not exist.

---

## Are There Variant Types?

No, not at the moment!
