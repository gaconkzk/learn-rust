# Control del flujo con Match

---

Use `match` para revisar variantes de Enums.

---

```rust
fn main() {
    let args = std::env::args;
    
    match args.at(1) {
        Some(arg) => { println!("Submitted Argument: {}", arg)},
        None => { println!("No Argument submitted!") }
    }
}
```

---

```rust
fn main() {
    let maybe_file = std::fs::File::open("Is not there!");
    
    match maybe_file {
        Ok(f) => { println!("File opened! Debug: {:?}", f) },
        Err(e) => { println!("File not opened! Error: {:?}", e) }
    }
}
```

---

`match` debe cubrir todas las variantes.

---

## Ignora otras variantes

```rust
fn main() {
    let maybe_file = std::fs::File::open("Is not there!");
    
    match maybe_file {
        Err(e) => { println!("File not opened! Error: {:?}", e) }
        _ => {}
    }
}
```

---

`Result` tienen un marcado especial. ¡No deben ser ignorados!

```rust
fn main() {
    let maybe_file = std::fs::File::open("Is not there!");
}
```

Solución: Match o pasar de largo.
